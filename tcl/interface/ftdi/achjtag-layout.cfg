# Most ACH eval boards support SWO trace output and should use
# this "ach-jtag" layout.
#
# ADBUS 0..3 are used for JTAG as usual. GPIOs are used to switch
# between JTAG and SWD, or switch the ft2232 UART on the second
# MPSSE channel/interface (DBUS) between (i) the console UART (on
# ACH core boards) or (ii) SWO trace data (generic).
#
# We come up in JTAG mode and may switch to SWD later (with SWO/trace
# option if SWD is active).
#
# ADBUS 4..7 are used for driver enable and reset signals:
#  - nTRST		on ADBUS4 (output)
#  - nSRST		on ADBUS5 (output)
#  - nDBGEN		on ADBUS6 (output)
#			   0 => JTAG/SWD signals active driven
#			   1 => JTAG/SWD signals passive (high-Z)
#  - DBGMOD		on ADBUS7 (output)
#			   0 => SWD signal path enabled
#			   1 => JTAG signal path enabled
#
# ACBUS 0 is used for voltage sens. ACBUS 1..2 are used for reset
# signals read back:
#  - Vcc sens		on ACBUS0 (input)
#  - TRST sens		on ACBUS1 (input)
#  - SRST sens		on ACBUS2 (input)
#
# ACBUS 3..4 are used for JTAG communication LEDs:
#  - JTAG RxD (green)	on ACBUS3 (output)
#  - JTAG TxD (red)	on ACBUS4 (output)
#
# BCBUS 3..4 are used for UART/RS232 communication LEDs:
#  - RS232 RxD (green)	on BCBUS3 (output)
#  - RS232 TxD (red)	on BCBUS4 (output)
#

# DBUS == GPIO-Lx on first channel/interface (MPSSE/JTAG)
set ACHI_JTAG_TCK	[expr (1 << 0)]; # ADBUS 0
set ACHI_JTAG_TDI	[expr (1 << 1)]; # ADBUS 1
set ACHI_JTAG_TDO	[expr (1 << 2)]; # ADBUS 2
set ACHI_JTAG_TMS	[expr (1 << 3)]; # ADBUS 3
set ACHI_TRST		[expr (1 << 4)]; # ADBUS 4
set ACHI_SRST		[expr (1 << 5)]; # ADBUS 5
set ACHI_DBG_ENn	[expr (1 << 6)]; # ADBUS 6 (a.k.a. nDBGEN)
set ACHI_JTAG_EN	[expr (1 << 7)]; # ADBUS 7 (a.k.a. DBGMOD)

# CBUS == GPIO-Hx on first channel/interface (MPSSE/GPIO)
set ACHI_VSENS		[expr (1 << 0)]; # ACBUS 0
set ACHI_TRSTSENS	[expr (1 << 1)]; # ACBUS 1
set ACHI_SRSTSENS	[expr (1 << 2)]; # ACBUS 2
set ACHI_JRXLED		[expr (1 << 3)]; # ACBUS 3 (a.k.a. green LED)
set ACHI_JTXLED		[expr (1 << 4)]; # ACBUS 4 (a.k.a. red LED)

# DBUS = GPIO-Lx on second channel/interface (UART/RS232)
set ACHI_VCP_RX		[expr (1 << 0)]; # BDBUS 0 (to console UART)
set ACHI_TX_SWO		[expr (1 << 1)]; # BDBUS 1
set ACHI_SWO_EN		[expr (1 << 4)]; # BDBUS 4

# CBUS = GPIO-Hx on second channel/interface (UART/RS232)
set ACHI_URXLED		[expr (1 << 3)]; # BCBUS 3 (a.k.a. green LED)
set ACHI_UTXLED		[expr (1 << 4)]; # BCBUS 4 (a.k.a. red LED)

# set FTDI driver configuration values
set ACHI_INIT_DIR_HB	[expr ($ACHI_JRXLED | $ACHI_JTXLED)]
set ACHI_INIT_DIR_LB	[expr ($ACHI_JTAG_EN | $ACHI_DBG_ENn | $ACHI_JTAG_TMS | $ACHI_JTAG_TDI | $ACHI_JTAG_TCK)]
set ACHI_INIT_DAT_HB	0x00
set ACHI_INIT_DAT_LB	[expr ($ACHI_JTAG_EN | $ACHI_JTAG_TMS)]
set ACHI_INIT_DIR	[format "0x%04x" [expr (($ACHI_INIT_DIR_HB << 8) | $ACHI_INIT_DIR_LB)]]
set ACHI_INIT_DAT	[format "0x%04x" [expr (($ACHI_INIT_DAT_HB << 8) | $ACHI_INIT_DAT_LB)]]

set ACHI_SHD_DIR_HB	0x00
set ACHI_SHD_DIR_LB	[expr ($ACHI_SRST | $ACHI_TRST | $ACHI_JTAG_TMS | $ACHI_JTAG_TDI | $ACHI_JTAG_TCK)]
set ACHI_SHD_DAT_HB	0x00
set ACHI_SHD_DAT_LB	[expr ($ACHI_DBG_ENn | $ACHI_SRST | $ACHI_TRST | $ACHI_JTAG_TMS)]
set ACHI_SHD_DIR	[format "0x%04x" [expr (($ACHI_SHD_DIR_HB << 8) | $ACHI_SHD_DIR_LB)]]
set ACHI_SHD_DAT	[format "0x%04x" [expr (($ACHI_SHD_DAT_HB << 8) | $ACHI_SHD_DAT_LB)]]

set ACHI_SIGN_TRST_DIR	[format "0x%04x" $ACHI_TRST]
set ACHI_SIGN_TRST_DAT	[format "0x%04x" $ACHI_TRST]
set ACHI_SIGN_SRST_DIR	[format "0x%04x" $ACHI_SRST]
set ACHI_SIGN_SRST_DAT	[format "0x%04x" $ACHI_SRST]

set ACHI_SIGN_DBGEN_DIR	[format "0x%04x" $ACHI_DBG_ENn]
set ACHI_SIGN_DBGEN_DAT	[format "0x%04x" $ACHI_DBG_ENn]
set ACHI_SIGN_DBGMOD_DIR [format "0x%04x" $ACHI_JTAG_EN]
set ACHI_SIGN_DBGMOD_DAT [format "0x%04x" $ACHI_JTAG_EN]

set ACHI_SIGN_LED_DIR	[format "0x%04x" [expr ($ACHI_JRXLED << 8)]]
set ACHI_SIGN_LED_DAT	[format "0x%04x" [expr ($ACHI_JRXLED << 8)]]
set ACHI_SIGN_LED2_DIR	[format "0x%04x" [expr ($ACHI_JTXLED << 8)]]
set ACHI_SIGN_LED2_DAT	[format "0x%04x" [expr ($ACHI_JTXLED << 8)]]

# FTDI layout setup, first channel/interface (MPSSE/JTAG)
ftdi_channel 0
ftdi_layout_init $ACHI_INIT_DAT $ACHI_INIT_DIR
ftdi_layout_shutdown $ACHI_SHD_DAT $ACHI_SHD_DIR
ftdi_layout_signal nTRST -data $ACHI_SIGN_TRST_DAT -oe $ACHI_SIGN_TRST_DIR
ftdi_layout_signal nSRST -data $ACHI_SIGN_SRST_DAT -oe $ACHI_SIGN_SRST_DIR

# nDBGEN, DBGMOD: not (yet) used, hard setup in ftdi_layout_init
ftdi_layout_signal nDBGEN -data $ACHI_SIGN_DBGEN_DAT -oe $ACHI_SIGN_DBGEN_DIR
ftdi_layout_signal DBGMOD -data $ACHI_SIGN_DBGMOD_DAT -oe $ACHI_SIGN_DBGMOD_DIR

# LED is RX_B (green) and signals JTAG queue activities
# LED2 is TX_A (red) and signals JTAG session activities
ftdi_layout_signal LED -ndata $ACHI_SIGN_LED_DAT -oe $ACHI_SIGN_LED_DIR
ftdi_layout_signal LED2 -ndata $ACHI_SIGN_LED2_DAT -oe $ACHI_SIGN_LED2_DIR
